{"allContent":{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/","tagsPath":"/tags","editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs","editUrlLocalized":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/Users/jonbennett/Dropbox/Coding-Main/vectorbt-pro-docs/sidebars.js","contentPath":"/Users/jonbennett/Dropbox/Coding-Main/vectorbt-pro-docs/docs","contentPathLocalized":"/Users/jonbennett/Dropbox/Coding-Main/vectorbt-pro-docs/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"building_blocks","title":"building_blocks","description":"In what follows, we will look at sub-packages, modules, and especially classes that act as building blocks for more advanced functionalities distributed across vectorbt, such as Portfolio. For illustration, we will gradually build our custom class CorrStats that will let us analyze the correlation between two arrays in the most performant and flexible way ðŸ§ ","source":"@site/docs/2-building_blocks.md","sourceDirName":".","slug":"/building_blocks","permalink":"/building_blocks","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/2-building_blocks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"General Design","permalink":"/intro"},"next":{"title":"data","permalink":"/data"}},{"id":"data","title":"data","description":"VectorBT PRO works on Pandas and NumPy arrays, but where those arrays are coming from? Getting the financial data manually is a challenging task, especially when an exchange can return only one bunch of data at a time such that iteration over time ranges, concatenation of results, and alignment of index and columns are effectively outsourced to the user. The task gets only trickier when multiple symbols are involved.","source":"@site/docs/3-data.md","sourceDirName":".","slug":"/data","permalink":"/data","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/3-data.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Building Blocks","permalink":"/building_blocks"},"next":{"title":"data-local","permalink":"/data-local"}},{"id":"data-local","title":"data-local","description":"Repeatedly hitting remote API endpoints is costly, thus it's very important to cache data locally. Luckily, vectorbt implements a range of ways for managing local data.","source":"@site/docs/4-data-local.md","sourceDirName":".","slug":"/data-local","permalink":"/data-local","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/4-data-local.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"data","permalink":"/data"},"next":{"title":"data-remote","permalink":"/data-remote"}},{"id":"data-remote","title":"data-remote","description":"Data classes that subclass RemoteData specialize in pulling (mostly OHLCV) data from remote data sources. In contrast to the classes for locally stored data, they communicate with remote API endpoints and are subject to authentication, authorization, throttling, and other mechanisms that must be taken into account. Also, the amount of data to be fetched is usually not known in advance, and because most data providers have API rate limits and can return only a limited amount of data for each incoming request, there is often a need to iterate over smaller bunches of data and properly concatenate them. Fortunately, vectorbt implements a number of preset data classes that can do all the jobs above automatically.","source":"@site/docs/5-data-remote.md","sourceDirName":".","slug":"/data-remote","permalink":"/data-remote","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/5-data-remote.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"data-local","permalink":"/data-local"},"next":{"title":"data-synthetic","permalink":"/data-synthetic"}},{"id":"data-scheduling","title":"data-scheduling","description":"Most data sources aren't sitting idle: they steadily generate new data. To keep up with new information, we can utilize a schedule manager (or even the simplest while-loop) to periodically run jobs related to data capturing and manipulation.","source":"@site/docs/7-data-scheduling.md","sourceDirName":".","slug":"/data-scheduling","permalink":"/data-scheduling","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/7-data-scheduling.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"data-synthetic","permalink":"/data-synthetic"},"next":{"title":"indicators","permalink":"/indicators"}},{"id":"data-synthetic","title":"data-synthetic","description":"Synthetic data is data that might have been generated by financial markets but was not. Synthetic price and return data address the financial small data problem and have numerous uses, including testing new investment strategies and feeding data-hungry ML models. They also help us to detect behavior and outlier discrepancies between real and mimicked markets. For example, if our model performs well on a subset of real-world data, we can check it against synthetic data to find out whether we introduced the look-ahead bias or any other Achilles' heel to our model without knowing it.","source":"@site/docs/6-data-synthetic.md","sourceDirName":".","slug":"/data-synthetic","permalink":"/data-synthetic","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/6-data-synthetic.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"data-remote","permalink":"/data-remote"},"next":{"title":"data-scheduling","permalink":"/data-scheduling"}},{"id":"indicator-analysis","title":"indicator-analysis","description":"To analyze an indicator, we can use the indicator instance returned by the run method.","source":"@site/docs/11-indicator-analysis.md","sourceDirName":".","slug":"/indicator-analysis","permalink":"/indicator-analysis","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/11-indicator-analysis.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"indicator-development","permalink":"/indicator-development"},"next":{"title":"indicator-parsers","permalink":"/indicator-parsers"}},{"id":"indicator-development","title":"indicator-development","description":"VectorBT PRO implements a ton of functions and arguments for seamless development of indicators. All it takes is an indicator function and a specification of how to handle it.","source":"@site/docs/10-indicator-development.md","sourceDirName":".","slug":"/indicator-development","permalink":"/indicator-development","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/10-indicator-development.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"indicators","permalink":"/indicators"},"next":{"title":"indicator-analysis","permalink":"/indicator-analysis"}},{"id":"indicator-parsers","title":"indicator-parsers","description":"IndicatorFactory deploys a collection of parsers to simplify creation of indicators, ranging from third-party indicator parsers to a powerful expression parser.","source":"@site/docs/12-indicator-parsers.md","sourceDirName":".","slug":"/indicator-parsers","permalink":"/indicator-parsers","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/12-indicator-parsers.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"indicator-analysis","permalink":"/indicator-analysis"},"next":{"title":"portfolio","permalink":"/portfolio"}},{"id":"indicators","title":"indicators","description":"Class IndicatorFactory is a one of the most powerful entities in the vectorbt's ecosystem - it can wrap any indicator function and make it parametrizable and analyzable.","source":"@site/docs/9-indicators.md","sourceDirName":".","slug":"/indicators","permalink":"/indicators","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/9-indicators.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"data-scheduling","permalink":"/data-scheduling"},"next":{"title":"indicator-development","permalink":"/indicator-development"}},{"id":"intro","title":"VectorBT PRO Documentation","description":"Navigation","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/intro.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","next":{"title":"Building Blocks","permalink":"/building_blocks"}},{"id":"portfolio","title":"portfolio","description":"Portfolio refers to any combination of financial assets held by a trader. In the world of vectorbt, \"portfolio\" is a multidimensional structure capable of simulating and tracking multiple independent but also dependent portfolio instances. The main function of a portfolio is to apply a trading logic on a set of inputs to simulate a realistic trading environment, also referred to as \"simulation\". The outputs of such a simulation are orders and other information that can be used by the user in assessing the portfolio's performance, also referred to as \"reconstruction\" or \"post-analysis\". Both phases are isolated in nature, which enables various interesting use cases for quantitative analysis and data science.","source":"@site/docs/13-portfolio.md","sourceDirName":".","slug":"/portfolio","permalink":"/portfolio","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/13-portfolio.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"indicator-parsers","permalink":"/indicator-parsers"},"next":{"title":"portfolio-from-orders","permalink":"/portfolio-from-orders"}},{"id":"portfolio-from-orders","title":"portfolio-from-orders","description":"Instead of building our custom simulator from scratch, we can make use of one of the preset simulation methods offered by vectorbt. There are three predominantly used methods iterate over the rows and columns, and at each step, convert the current element of all the input data passed by the user into an order request, and process it by updating the current simulation state and by appending the filled order record to an array. This array along with other information can later be used during the reconstruction phase to analyze the simulation.","source":"@site/docs/14-portfolio-from-orders.md","sourceDirName":".","slug":"/portfolio-from-orders","permalink":"/portfolio-from-orders","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/14-portfolio-from-orders.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"portfolio","permalink":"/portfolio"},"next":{"title":"portfolio-from-signals","permalink":"/portfolio-from-signals"}},{"id":"portfolio-from-signals","title":"portfolio-from-signals","description":"The method Portfolio.from\\orders (FO), which was discussed previously, is the most primitive simulation method: it takes order information in form of multiple array-like arguments and broadcasts them to a single shape, such that we know exactly what has to be ordered of each asset at each bar. This method requires us to have that information in advance, regardless of any events during the simulation. But what if we wanted to create an order only given that we're not currently in the market, or in general, to make an order dependable on the current simulation state? Such a conditional logic cannot be represented using orders alone - we either need to use a callback, or define more arrays. The former and the latter are both implemented by Portfolio.from\\signals (FS).","source":"@site/docs/15-portfolio-from-signals.md","sourceDirName":".","slug":"/portfolio-from-signals","permalink":"/portfolio-from-signals","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/15-portfolio-from-signals.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"portfolio-from-orders","permalink":"/portfolio-from-orders"}},{"id":"README","title":"VectorBT PRO Documentation","description":"This is the official documentation for VectorBT PRO, built with Docusaurus 3.","source":"@site/docs/README.md","sourceDirName":".","slug":"/","permalink":"/","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/README.md","tags":[],"version":"current","frontMatter":{}},{"id":"tutorials/Basic-RSI-Strategy","title":"Basic-RSI-Strategy","description":"One of the main powers of vectorbt (PRO) is the ability to create and backtest numerous strategy configurations in the blink of an eye. In this introductory example, we will explore how profitable is the following RSI strategy commonly used by beginners:","source":"@site/docs/tutorials/1-Basic-RSI-Strategy.md","sourceDirName":"tutorials","slug":"/tutorials/Basic-RSI-Strategy","permalink":"/tutorials/Basic-RSI-Strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/1-Basic-RSI-Strategy.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Installation","permalink":"/tutorials/installation"},"next":{"title":"SuperFast SuperTrend","permalink":"/tutorials/SuperFast-SuperTrend"}},{"id":"tutorials/Cross-Validation","title":"Cross-Validation","description":"Once we develop a rule-based or ML-based strategy, it's time to backtest it. The first time around we obtain a low Sharpe ratio we're unhappy with, we decide to tweak our strategy. Eventually, after multiple iterations of tweaking parameters, we end up with a \"flawless\" combination of parameters and a strategy with an exceptional Sharpe ratio. However, in live trading the performance took a different turn: we essentially tanked and lost money. What went wrong?","source":"@site/docs/tutorials/9-Cross-Validation.md","sourceDirName":"tutorials","slug":"/tutorials/Cross-Validation","permalink":"/tutorials/Cross-Validation","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/9-Cross-Validation.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Patterns","permalink":"/tutorials/Patterns"}},{"id":"tutorials/installation","title":"installation","description":"Info","source":"@site/docs/tutorials/0-installation.md","sourceDirName":"tutorials","slug":"/tutorials/installation","permalink":"/tutorials/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/0-installation.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"tutorialsSidebar","next":{"title":"Basic RSI Strategy","permalink":"/tutorials/Basic-RSI-Strategy"}},{"id":"tutorials/MTF-Analysis","title":"MTF-Analysis","description":"By limiting ourselves to only one time frame, we may lose sight of the larger trend, miss clear levels of support and resistance, and overlook high probability entry and stop levels. Monitoring the same pair under different time frames (or time compressions) can help us identify the overall flow of an asset (the trend is your friend, after all) and key chart patterns. In fact, all technical indicators will show different results when used in certain times, and all those results combined can make us draw a more complete picture of the market we're participating in.","source":"@site/docs/tutorials/5-MTF-Analysis.md","sourceDirName":"tutorials","slug":"/tutorials/MTF-Analysis","permalink":"/tutorials/MTF-Analysis","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/5-MTF-Analysis.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Stop Signals","permalink":"/tutorials/Stop-Signals"},"next":{"title":"Portfolio Optimization","permalink":"/tutorials/Portfolio-Optimization"}},{"id":"tutorials/Pairs-Trading","title":"Pairs-Trading","description":"A pairs trading strategy is a statistical arbitrage and convergence strategy that is based on the historical correlation of two instruments and involves matching a long position with a short position. The two offsetting positions form the basis for a hedging strategy that seeks to benefit from either a positive or negative trend. A high positive correlation (mostly a minimum of 0.8) of both instruments is the primary driver behind the strategy's profits. Whenever the correlation eventually deviates, we would seek to buy the underperforming instrument and sell short the outperforming instrument. If the securities return to their historical correlation (which is what we bet on!), a profit is made from the convergence of the prices. Thus, pairs trading is used to generate profits regardless of any market condition: uptrend, downtrend, or sideways.","source":"@site/docs/tutorials/7-Pairs-Trading.md","sourceDirName":"tutorials","slug":"/tutorials/Pairs-Trading","permalink":"/tutorials/Pairs-Trading","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/7-Pairs-Trading.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Portfolio Optimization","permalink":"/tutorials/Portfolio-Optimization"},"next":{"title":"Patterns","permalink":"/tutorials/Patterns"}},{"id":"tutorials/Patterns","title":"Patterns","description":"Patterns provide a sense of order in what might otherwise appear chaotic. They tend to emerge everywhere in nature: shapes like circles in road signs or the rectangles in windows and doors. Just like children who gradually learn how to function in a completely unknown environment by looking for regularities, financial market participants need to learn how to navigate their complex, ever-changing environment as well. And just like our little fellows who have parents and teachers to assist their learning process (and Google, of course), we have a wonderful tool to assist ours â€” quantitative analysis.","source":"@site/docs/tutorials/8-Patterns.md","sourceDirName":"tutorials","slug":"/tutorials/Patterns","permalink":"/tutorials/Patterns","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/8-Patterns.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Pairs Trading","permalink":"/tutorials/Pairs-Trading"},"next":{"title":"Cross Validation","permalink":"/tutorials/Cross-Validation"}},{"id":"tutorials/Portfolio-Optimization","title":"Portfolio-Optimization","description":"Portfolio optimization is all about creating a portfolio of assets such that our investment has the maximum return and minimum risk. A portfolio in this regard is the asset distribution of an investor - a weight vector, which can be well optimized for risk appetite, expected rate of return, cost minimization, and other target metrics. Moreover, such optimization can be performed on a regular basis to account for any recent changes in the market behavior.","source":"@site/docs/tutorials/6-Portfolio-Optimization.md","sourceDirName":"tutorials","slug":"/tutorials/Portfolio-Optimization","permalink":"/tutorials/Portfolio-Optimization","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/6-Portfolio-Optimization.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"MTF Analysis","permalink":"/tutorials/MTF-Analysis"},"next":{"title":"Pairs Trading","permalink":"/tutorials/Pairs-Trading"}},{"id":"tutorials/Signal-Dev","title":"Signal-Dev","description":"Signals are an additional level of abstraction added on top of orders: instead of specifying every bit of information on what needs to be ordered at each timestamp, we can first decide on what a typical order should look like, and then choose the timing of issuing such an order. The latter decision process can be realized through signals, which in the vectorbt's world are represented by a boolean mask where True means \"order\" and False means \"no order\". Additionally, we can change the meaning of each signal statically, or dynamically based on the current simulation state; for example, we can instruct the simulator to ignore an \"order\" signal if we're already in the market, which cannot be done by using the \"from-orders\" method alone. Finally, vectorbt loves data science, and so comparing multiple strategies with the same trading conditions but different signal permutations (i.e., order timings and directions) is much easier, less error-prone, and generally leads to fairer experiments.","source":"@site/docs/tutorials/3-Signal-Dev.md","sourceDirName":"tutorials","slug":"/tutorials/Signal-Dev","permalink":"/tutorials/Signal-Dev","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/3-Signal-Dev.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"SuperFast SuperTrend","permalink":"/tutorials/SuperFast-SuperTrend"},"next":{"title":"Stop Signals","permalink":"/tutorials/Stop-Signals"}},{"id":"tutorials/Stop-Signals","title":"Stop-Signals","description":"Our goal is to utilize large-scale backtesting to compare the performance of trading with and without stop loss (SL), trailing stop (TS), and take profit (TP) signals. To make this attempt representative, we will run a huge number of experiments across three different dimensions: instruments, time, and parameters.","source":"@site/docs/tutorials/4-Stop-Signals.md","sourceDirName":"tutorials","slug":"/tutorials/Stop-Signals","permalink":"/tutorials/Stop-Signals","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/4-Stop-Signals.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Signal Development","permalink":"/tutorials/Signal-Dev"},"next":{"title":"MTF Analysis","permalink":"/tutorials/MTF-Analysis"}},{"id":"tutorials/SuperFast-SuperTrend","title":"SuperFast-SuperTrend","description":"While Python is slower than many compiled languages, it's easy to use and extremely diverse. For many, especially in the data science domain, the practicality of the language beats the speed considerations - it's like a Swiss army knife for programmers and researchers alike.","source":"@site/docs/tutorials/2-SuperFast-SuperTrend.md","sourceDirName":"tutorials","slug":"/tutorials/SuperFast-SuperTrend","permalink":"/tutorials/SuperFast-SuperTrend","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/tutorials/2-SuperFast-SuperTrend.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialsSidebar","previous":{"title":"Basic RSI Strategy","permalink":"/tutorials/Basic-RSI-Strategy"},"next":{"title":"Signal Development","permalink":"/tutorials/Signal-Dev"}},{"id":"vectorBT-PRO-cookbook","title":"vectorBT-PRO-cookbook","description":"DisplayingÂ¶","source":"@site/docs/11-vectorBT-PRO-cookbook.md","sourceDirName":".","slug":"/vectorBT-PRO-cookbook","permalink":"/vectorBT-PRO-cookbook","draft":false,"unlisted":false,"editUrl":"https://github.com/btcjon/vectorbt-pro-docs/tree/main/docs/11-vectorBT-PRO-cookbook.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{}}],"drafts":[],"sidebars":{"documentationSidebar":[{"type":"doc","id":"intro","label":"General Design","translatable":true},{"type":"doc","id":"building_blocks","label":"Building Blocks","translatable":true},{"type":"category","label":"Data","items":[{"type":"doc","id":"data"},{"type":"doc","id":"data-local"},{"type":"doc","id":"data-remote"},{"type":"doc","id":"data-synthetic"},{"type":"doc","id":"data-scheduling"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Indicators","items":[{"type":"doc","id":"indicators"},{"type":"doc","id":"indicator-development"},{"type":"doc","id":"indicator-analysis"},{"type":"doc","id":"indicator-parsers"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Portfolio","items":[{"type":"doc","id":"portfolio"},{"type":"doc","id":"portfolio-from-orders"},{"type":"doc","id":"portfolio-from-signals"}],"collapsed":true,"collapsible":true}],"tutorialsSidebar":[{"type":"doc","id":"tutorials/installation","label":"Installation","translatable":true},{"type":"doc","id":"tutorials/Basic-RSI-Strategy","label":"Basic RSI Strategy","translatable":true},{"type":"doc","id":"tutorials/SuperFast-SuperTrend","label":"SuperFast SuperTrend","translatable":true},{"type":"doc","id":"tutorials/Signal-Dev","label":"Signal Development","translatable":true},{"type":"doc","id":"tutorials/Stop-Signals","label":"Stop Signals","translatable":true},{"type":"doc","id":"tutorials/MTF-Analysis","label":"MTF Analysis","translatable":true},{"type":"doc","id":"tutorials/Portfolio-Optimization","label":"Portfolio Optimization","translatable":true},{"type":"doc","id":"tutorials/Pairs-Trading","label":"Pairs Trading","translatable":true},{"type":"doc","id":"tutorials/Patterns","label":"Patterns","translatable":true},{"type":"doc","id":"tutorials/Cross-Validation","label":"Cross Validation","translatable":true}]}}]}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/","source":"@site/src/pages/index.js"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-svgr":{},"docusaurus-theme-classic":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}}